#include<iostream>
using namespace std;

class Base
{
    public:
    int A,B;
    void Fun()  //1000
    {
        cout<<"Inside Fun"<<\n";
        }
        void Gun() //2000
    {
        cout<<"Inside Gun"<<\n";
        }
        void sun() //3000
      {
        cout<<"Inside Fun"<<\n";
        }

    }
};

class Derived :public Base
{
    public:
    int X,Y:
     void Fun()  //4000
    {
        cout<<"Inside Fun of derived"<<\n";
        }
        void Gun() //5000
    {
        cout<<"Inside Gun of derived"<<\n";
        }
        void sun() /6000
      {
        cout<<"Inside Fun of derived"<<\n";
        }


};


int main()
{{}
   Base *bp=new Base; //no casting
   Derived *dp=new Derived;//no casting

   Base *bp1=new Derived; //Up casting(allowed)
  // Derived *dp1=new Base;//Down casting (No allowed)

   return 0;
}
      

new program
